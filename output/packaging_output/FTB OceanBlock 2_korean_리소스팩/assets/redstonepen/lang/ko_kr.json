{
    "language": "한국어",
    "language.code": "ko_kr",
    "language.region": "대한민국",
    "itemGroup.tabredstonepen": "레드스톤 펜",
    "redstonepen.tooltip.hint.extended": "§6[§9Shift§r 더 보기§6]§r",
    "redstonepen.tooltip.hint.help": "§6[§9Ctrl-Shift§r 도움말§6]§r",
    "block.redstonepen.basic_button": "기본 버튼",
    "block.redstonepen.basic_button.help": "기본적으로 모든 곳에 맞습니다 - 바라건대.",
    "block.redstonepen.basic_gauge": "기본 레드스톤 측정기",
    "block.redstonepen.basic_gauge.help": "수신된 레드스톤 신호를 보여주는 간단한 풀 블록 유리 측정기입니다. 신호를 절연합니다.",
    "block.redstonepen.basic_lever": "기본 레버",
    "block.redstonepen.basic_lever.help": "기본적으로 모든 곳에 맞습니다 - 바라건대.",
    "block.redstonepen.basic_pulse_button": "기본 펄스 버튼",
    "block.redstonepen.basic_pulse_button.help": "1틱 동안 레드스톤 신호를 방출합니다.",
    "block.redstonepen.bistable_relay": "양방향 안정 레드스톤 릴레이",
    "block.redstonepen.bistable_relay.help": "뒤쪽과 측면에서 들어오는 신호를 출력 전력 15로 전면으로 다시 전달합니다. 상승 신호 에지(꺼짐-켜짐-펄스 제어)를 감지하면 켜지고 꺼집니다.",
    "block.redstonepen.bridge_relay": "브릿지 레드스톤 릴레이",
    "block.redstonepen.bridge_relay.help": "뒤쪽에서 들어오는 신호를 출력 전력 15로 전면으로 다시 전달합니다. 왼쪽에서 오른쪽으로 일반 레드스톤 신호를 통과시킵니다.",
    "block.redstonepen.control_box": "레드스톤 논리 제어",
    "block.redstonepen.control_box.error.expected_assignment": "할당이 필요합니다",
    "block.redstonepen.control_box.error.invalid_character": "잘못된 문자",
    "block.redstonepen.control_box.error.invalid_number_of_arguments": "잘못된 개수의 함수 인수",
    "block.redstonepen.control_box.error.missing_closing_function_parenthesis": "닫는 함수 괄호 ')'가 필요합니다",
    "block.redstonepen.control_box.error.missing_closing_parenthesis": "닫는 괄호 ')'가 필요합니다",
    "block.redstonepen.control_box.error.missing_function_arguments": "괄호를 포함한 함수 인수가 필요합니다",
    "block.redstonepen.control_box.error.parse_error": "구문 분석 오류",
    "block.redstonepen.control_box.error.symbol_readonly": "기호/변수는 읽기 전용입니다",
    "block.redstonepen.control_box.error.unexpected_character": "예상치 못한 문자",
    "block.redstonepen.control_box.error.unknown_function": "알 수 없는 함수",
    "block.redstonepen.control_box.help": "간소화된 PLC와 유사한 컨트롤러입니다.",
    "block.redstonepen.control_box.help.1": "§n기초:§r§7 RLC는 모든 방향에서 디지털(ON/OFF) 및 아날로그\n§7(신호 강도, 비교기 출력) 레드스톤 입/출력을 제공합니다.\n§7포트는 빨간색, 파란색,\n§7노란색, 초록색, 위쪽 및 아래쪽의 첫 글자입니다.\n§7수학 표현식 세트로 프로그래밍합니다. 모든 코드\n§7줄은 동일한 틱에서 계산됩니다(입력 읽기 ->\n§7계산 -> 출력 쓰기). 코드는 대소문자를 구분하지 않습니다\n§7(\"R\"은 \"r\"과 동일). 자신의 변수를 설정할 수도 있습니다.\n§7해당 값은 RLC가 중지될 때까지 유지됩니다.\n§7구문 분석 오류는 표시되고(마우스를 올려 놓기)\n§7프로그램을 시작하지 못하게 합니다.\n\n§7RUN/STOP 버튼을 클릭하여 프로그램을 시작하거나 중지합니다.\n§7RLC 기호에 마우스를 올려 내부 변수 값을 확인합니다\n§7(실행 중인 경우에만). 포트 목록에는 현재\n§7신호 값이 표시되고 포트가 입력, 출력 또는 사용되지 않음인지 여부가 표시됩니다.\n§7클립보드 버튼 복사/붙여넣기는 말할 필요도 없겠죠 ;)",
    "block.redstonepen.control_box.help.10": "§n추가:§r§7 컨트롤은 일반적으로 4틱마다 계산합니다.\n§7입력 포트가 ON->OFF 또는 OFF->ON으로 변경되면\n§7실행 주기가 다음 가능한 틱으로 다시 예약됩니다.\n§7\"TICKRATE\" 변수를 할당하여 기본 틱 속도를 변경합니다\n§72t와 20t 사이.\n§7\n§7비교기 입력은 이 예약을 트리거하지 않습니다.",
    "block.redstonepen.control_box.help.2": "§n표현식§r§7은 \"RESULT=TERM\" 할당과 같이 명시됩니다.\n§7e.g. \"R = G & B\". 모든 코드 줄은 이와 같아야 합니다.\n§7\"#\"을 사용하여 줄의 나머지 부분을 주석으로 표시합니다.\n§7TERM은 괄호 \"(...)\", 포트,\n§7변수, 연산자 및 함수로 구성될 수 있습니다.\n\n§7포트 변수(R, B, Y, G, U, D)에 할당하면\n§7자동으로 출력으로 설정되고 입력 신호 변경 사항은\n§7거기에서 무시됩니다. 표현식에서 포트 변수(이미\n§7출력이 아닌)를 사용하면 자동으로\n§7입력으로 설정됩니다.\n§7인접한 블록의 비교기-출력은\n§7\".CO\" 접미사로 읽습니다. E.g. \"Y = MAX( B.CO, R, g.co, MyVar )\".\n§7CO는 할당하더라도 RLC 출력이 아닙니다.",
    "block.redstonepen.control_box.help.3": "§n산수§r§7는 RLC의 정수 산술을 의미합니다.\n§7\"A * 1.5\"는 허용되지 않으며 나눗셈은 반올림됩니다\n§70을 향해. 지원되는 작업은 다음과 같습니다.\n\n§7  \"+\", \"-\", \"*\", \"/\", \"%\" (후자는 모듈로 나눗셈입니다).\n\n§7변수 할당은 양수 또는 음수\n§732비트 정수 값(필요한 것보다 큼)을 보유합니다.\n§7그러나 포트 값은 묵시적으로\n§7유효한 레드스톤 값 범위 0..15로 고정됩니다.\n§7Int32 래핑이 적용되고 0으로 나누면\n§70과 던전 차원에 대한 특이점이 생성됩니다.",
    "block.redstonepen.control_box.help.4": "§n관계§r§7 연산자는 숫자 비교를 제공합니다.\n§7\n§7  \"==\" (같음), \"!=\" (같지 않음),\n§7  \">=\" (크거나 같음), \"<=\" (less-equal),\n§7  \">\" (보다 큼), \"<\" (less-than).\n§7\n§7They evaluate to 0 if the comparison result is\n§7\"false\", and 15 if \"true\". As the values are numbers,\n§7you can directly calculate with them. E.g. \"G=(R>11)/3\"\n§7결과는 5 또는 0입니다. 그러나 대신 IF 함수를 사용하는 것이 더 좋습니다. \"G = IF( R>11, 5, 0 )\".",
    "block.redstonepen.control_box.help.5": "§n논리§r§7 연산은 \"레드스톤 부울\" 값으로 작동합니다.\n§7정수입니다. 0보다 큰 피연산자는\n§7\"참\"으로 간주됩니다. 작업은 \"거짓\"의 경우 0을 산출하고\n§7\"참\"의 경우 15를 산출합니다. 지원되는 항목은 다음과 같습니다.\n§7\n§7 AND: \"AND\", \"&&\", \"&\"\n§7 OR: \"OR\", \"||\", \"|\"\n§7 XOR: \"XOR\", \"^\"\n§7 NOT: \"NOT\", \"!\"\n§7\n§7경험 법칙: OP는 레드스톤 램프와 같은 입력을 보고\n§7레버와 같은 출력을 산출합니다. 코더: 비트 단위 연산은 없습니다.",
    "block.redstonepen.control_box.help.6": "§n에지 감지§r§7는 입력이 OFF[0]에서 ON[>0]으로 변경되는 순간을 추적하는 것을 의미합니다.\n§7상승 에지 트리거는 \".RE\" 접미사로 설정되고\n§7입력이 OFF에서 ON으로 변경되면 1틱 동안 15입니다.\n§7하강 에지 트리거는 \".FE\" 접미사로 설정되고\n§7입력이 ON에서 OFF로 변경되면 1틱 동안 15입니다.\n§7E.g:\n§7\n§7 C = C+IF(R.RE OR G.FE OR Y.CO.RE, 1, 0) # C 카운트\n§7 C = CNT1(G.RE, B.RE, 10) # 업-다운-카운터1 사용\n§7\n§7참고: RLC가 모든 틱을 실행하지 않을 수 있지만 에지는\n§7입력 포트(\"인터럽트\")에서 여전히 감지됩니다. PLC\n§7해당 항목은 RTRIG 및 FTRIG라고 합니다.",
    "block.redstonepen.control_box.help.7": "§n타이머§r§7는 PLC에서 신호 기반으로 작동합니다. 주요 3가지\n§7는 RLC에서 구현됩니다: TON, TOF, TP:\n§7TON은 스위치 켜짐 지연입니다. 입력 신호가 지정된 시간 동안 꾸준히\n§7켜져 있어야 타이머 출력이 켜짐으로 솟구칩니다.\n§7OFF 신호가 발생하면 타이머가 즉시 초기화됩니다. TOF는\n§7이와 동일하지만 반전됩니다 (스위치 꺼짐 지연). TP는 입력\n§7신호의 상승 에지를 감지할 때 지정된 시간 동안 펄스를 생성합니다.\n§7펄스 중 신호가 변경되어도 무시됩니다.\n§7RLC에는 각 유형의 (단순화된) 인스턴스가 5개 있습니다:\n§7\n§7 A = TON3( INPUT_TERM, ON_DELAY_TICKS )\n§7 A = TOF2( INPUT_TERM, OFF_DELAY_TICKS )\n§7 A = TP4( INPUT_TERM, PULSE_TIME_TICKS )\n§7 R = TON1( Y.CO<3, 30*20 ) # 호퍼 낮음 알람 (30초 후)\n§7 R = TP1( Y.RE, 20 ) # 관측기 펄스 확장 (1초).\n\n§7타이머 설정(PT)은 타이머가\n§7활성화된 동안 변경할 수 있습니다.",
    "block.redstonepen.control_box.help.8": "§n카운터§r§7는 이벤트 발생 횟수를 추적하는 데 도움이 됩니다. RLC\n§7에는 선택적 입력\n§7인수를 사용하는 5개의 업-다운 카운터 CNT1..5가 있습니다.\n§7\n§7N = CNTx(Iup) # Iup이 >0이면 카운트 증가\n§7N = CNTx(Iup, Idown) # IDown>0: 0으로 카운트 감소\n§7N = CNTx(Iup, Idown, Max) # 0..Max 카운트\n§7N = CNTx(Iup, Idown, Min, Max) # Min..Max 카운트\n§7N = CNTx(Iup, Idown, Min, Max, Reset) # Min으로 초기화\n§7\n§7N은 새 카운터 값을 유지합니다. 참고: 이벤트 개수에는\n§7신호 에지(e.g. G.RE)를 입력으로 사용하세요. 카운터는\n§7틱 시간 정확도가 보장되지 않습니다(타이머를 사용하여 타이밍을 맞추세요).",
    "block.redstonepen.control_box.help.9": "§n함수 참조§r\n§7IF(X,A,B) # X>0이면 A, 그렇지 않으면 B\n§7INV(X) # 레드스톤 반전: 15-X, 결과 0..15.\n§7MAX(A,B,...), MIN(...), MEAN(...) # 최소, 최대, 평균\n§7LIM(X), LIM(X,B), LIM(X,A,B) # 제한 0..15, 0..B, A..B\n§7TIME(), CLOCK() # 날짜, 게임 시간\n§7RND() # 무작위 0..15\n§7\n§7§nRLC 특정 함수 블록§r\n§7\n§7TIVx(T) # 간격, 매 T 틱마다 펄스(TIV1/TIV2/TIV3)§r\n§7TIVx(T, EN) # 간격, ENable 설정 시 매 T 틱마다 펄스.\n§7# (최소 간격은 3틱입니다).",
    "block.redstonepen.control_box.tooltips.copyall": "클립보드에 코드 복사",
    "block.redstonepen.control_box.tooltips.pasteall": "클립보드에서 코드 붙여넣기",
    "block.redstonepen.control_box.tooltips.rcaplayer": "플레이어 %1$s에 대한 RCA 연결",
    "block.redstonepen.control_box.tooltips.runstop": "실행/정지",
    "block.redstonepen.inverted_relay": "반전된 레드스톤 전달체",
    "block.redstonepen.inverted_relay.help": "뒷면과 측면에서 들어오는 신호를 출력 전력 15로 전면으로 전달합니다. 출력은 반전됩니다(입력 신호가 있으면 0, 없으면 15). 스위치 오프 지연은 1 레드스톤 틱이며 즉시 켜집니다.\n또한 선로에서 간접 입력 전력을 허용합니다(레드스톤 신호를 전파하는 블록에 연결됨).",
    "block.redstonepen.pulse_relay": "펄스 레드스톤 전달체",
    "block.redstonepen.pulse_relay.help": "상승 신호 에지(꺼짐-켜짐 펄스 제어)를 감지할 때 출력에서 짧은 펄스를 방출합니다. 펄스는 1 레드스톤 틱입니다.",
    "block.redstonepen.relay": "레드스톤 전달체",
    "block.redstonepen.relay.help": "뒷면과 측면에서 들어오는 신호를 출력 전력 15로 전면으로 전달합니다. 즉시 켜지고 스위치 오프 지연은 1 레드스톤 틱입니다.\n또한 선로에서 간접 입력 전력을 허용합니다(레드스톤 신호를 전파하는 블록에 연결됨).",
    "block.redstonepen.track": "레드스톤 선로",
    "item.redstonepen.pen": "레드스톤 펜",
    "item.redstonepen.pen.help": "모든 방향으로 얇은 레드스톤 선로를 그리거나 제거하는 데 사용되는 리필 가능 펜입니다.\n우클릭=설치, 좌클릭=제거, sneak:allow 중앙 커넥터.\n선로는 일반적으로 §l전력§r을 설치된 블록에 공급하지 않습니다(선로 중앙을 클릭하여 커넥터를 명시적으로 설치/제거). 웅크린 채 블록을 보면 현재 레드스톤 신호를 확인할 수 있습니다. 제작 보관함에서 레드스톤으로 수리하세요.\n하나의 블록에서 연결되지 않은 면에 너무 많은 선로가 있으면 크로스토크가 발생하여 작동하지 않습니다. 간단히 경로를 다시 지정하세요.",
    "item.redstonepen.pen.tooltip.numstored": "%1$s 레드스톤 저장됨",
    "item.redstonepen.pen.tooltip.rsfrominventory": "인벤토리에 있는 레드스톤 사용",
    "item.redstonepen.quill": "레드스톤 깃펜",
    "item.redstonepen.quill.help": "모든 방향으로 얇은 레드스톤 선로를 그리거나 제거하는 데 사용됩니다. 이러한 선로는 일반적으로 §l전력§r을 설치된 블록에 공급하지 않습니다(선로 중앙을 클릭하여 커넥터를 명시적으로 설치/제거). 웅크린 채 블록을 보면 현재 레드스톤 신호를 확인할 수 있습니다.\n하나의 블록에서 연결되지 않은 면에 너무 많은 선로가 있으면 크로스토크가 발생하여 작동하지 않습니다. 간단히 경로를 다시 지정하세요.",
    "item.redstonepen.remote": "레드스톤 리모컨",
    "item.redstonepen.remote.help": "버튼과 레버를 활성화/뒤집는 데 사용됩니다. 블록을 좌클릭하여 위치를 표시하고 나중에 리모컨을 사용하여 해당 블록을 트리거합니다. 블록 청크를 불러와야 하며 차원 간 작업은 불가능합니다.",
    "item.redstonepen.remote.tooltip.linkedto": "%4$s [%1$s,%2$s,%3$s]에 연결됨",
    "item.redstonepen.remote.tooltip.notlinked": "§o§7연결되지 않음, 버튼 또는 레버를 좌클릭하여 결속하세요.",
    "advancement.redstonepen.craft_redstonepen": "모두 그릴 수 있는 펜 하나",
    "advancement.redstonepen.craft_redstonepen.desc": "레드스톤 펜 제작",
    "redstonepen.overlay.comparator_compare": "비교",
    "redstonepen.overlay.comparator_subtract": "차집합",
    "redstonepen.overlay.direct_power": "%1$s",
    "redstonepen.overlay.direct_power_at": "%1$s @ %2$s",
    "redstonepen.overlay.indirect_power": "%1$s @ %2$s",
    "redstonepen.overlay.remote_saved": "링크가 저장되었습니다 %4$s [%1$s, %2$s, %3$s]",
    "redstonepen.overlay.repeater_delay": "%1$st",
    "redstonepen.overlay.track_power": "%1$s",
    "redstonepen.overlay.wire_power": "%1$s"
}